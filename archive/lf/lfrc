# UI options
set shell fish
set shellopts '-eu'
set nodrawbox
set icons
set nohidden
set info size
set cursorpreviewfmt "\033[7;2m"
# set a large offset to center the cursor
set scrolloff 99
set errorfmt "\033[31m%s\033[0m"
set sixel

# pass arguments with delimiter '\n'
set ifs "\n"
set filesep "\n"
set previewer pv

set previewer ~/.config/lf/previewer
set cleaner ~/.config/lf/cleaner

# key mapping
map <esc> cmd-escape
map <c-y> up
map <c-e> down
map <m-up> up
map <m-down> down
map gh cd ~
map gr cd /
map D delete
# shell mappings
map <enter> $open $fx
map e $$EDITOR $fx
map a :push %mkdir<space>
map r rename
map t $tig -C $PWD

# execute current file (must be executable)
map x $$f
map X !$f

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# mkdir command. See wiki if you want it to select created dir

# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

# make sure trash folder exists
# %mkdir -p ~/.trash

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
# cmd trash %set -f; mv $fx ~/.trash

# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> trash

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}


